help()
info()
demo()
librar(datasets)
library(datasets)
data("iris")
?iris
?iris
?iris
str(iris)
head(iris)
virginica<-subset(iris,Species == 'virginica')
sl<-data.frame(virginica$Sepal.Length)
sl<-data.frame(iris$Sepal.Length[iris$Species=="virginica"])
sl
summary(sl)
library(datasets)
data(mtcars)
?mtcars
abs(mean(mtcars$hp[mtcars$cyl==4])-mean(mtcars$hp[mtcars$cyl==8]))
debug(ls)
ls
source('~/Downloads/Coursera/rProgramming/rProgrammingAssignment3/ProgAssignment3-data/best.R')
best("SC", "heart attack")
getwd()
setwd(/Users/GyanGM/Downloads/Coursera/rProgramming)
debug(ls)
undebug(ls)
q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
quit
exit
Q
Q
ls
dir
undebug()
undebug(ls)
getwd()
ls
dir()
ls()
ls()
dir()
setwd('/Users/GyanGM/Downloads/Coursera/rProgramming/rProgrammingAssignment3/ProgAssignment3-data')
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
ist(outcome[, 11])
hist(outcome[, 11])
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
source"rankall.R"
source("rankall.R")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "heart failure", 4)
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
ls()
getwd()
setwd('/Users/GyanGM/Downloads/Coursera/Reproducible Research/RepData_PeerAssessment1')
source("PA1_template.Rmd")
require(ggplot2)
require(lubridate)
require(RColorBrewer)
require(dplyr)
require(ggthemes)
library(scales)
echo = TRUE  # Always make code visible
options(scipen = 1)  # Turn off scientific notations for numbers
unzip("activity.zip")
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data$month <- as.numeric(format(data$date, "%m"))
noNA <- na.omit(data)
rownames(noNA) <- 1:nrow(noNA)
head(noNA)
dim(noNA)
library(ggplot2)
install.packages("ggplot2")
getwd()
setw('/Users/GyanGM/Downloads/Coursera/rProgramming')
setwd('/Users/GyanGM/Downloads/Coursera/rProgramming')
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
getwd()
setwd("/Users/GyanGM/Downloads/Coursera/Reproducible Research/RepData_PeerAssessment1")
if (!file.exists("activity.csv")) {
unzip("activity.zip")
}
activity <- read.csv("activity.csv", colClass=c('integer', 'Date', 'integer'))
steps.date <- aggregate(steps ~ date, activity, sum)
head(steps.date)
barplot(steps.date$steps, names.arg=steps.date$date, ylim=c(0, 25000),
xlab="date", ylab="sum(steps)",)
mean(steps.date$steps)
median(steps.date$steps)
steps.interval <- aggregate(steps ~ interval, activity, mean)
plot(steps.interval, type='l')
steps.interval$interval[which.max(steps.interval$steps)]
sum(is.na(activity$steps))
activity.clean <- merge(activity, steps.date, by="date", suffixes=c("", ".mean"))
nas <- is.na(activity.clean$steps)
activity.clean$steps[nas] <- activity.clean$steps.mean[nas]
activity.clean <- activity.clean[, c(1:3)]
head(activity.clean)
steps.date <- aggregate(steps ~ date, activity.clean, sum)
barplot(steps.date$steps, names.arg=steps.date$date, ylim=c(0, 25000),
xlab="date", ylab="sum(steps)",)
mean(steps.date$steps)
median(steps.date$steps)
dayType <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("Saturday", "Sunday")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
activity$dayType <- as.factor(dayType(activity$date))
str(activity)
library(lattice)
steps.interval <- aggregate(steps ~ interval + dayType, activity, mean)
xyplot(steps ~ interval | dayType, data=steps.interval, layout=c(2,1), type='l')
knit2html()
install.packages("knitr")
install.packages("knitr")
knit2html("PA1_template.Rmd")
install.packages("knitr", dependencies = FALSE)
install.packages("knitr", dependencies = FALSE)
knit2html("PA1_template.Rmd")
knit2html()
install.packages("knitr")
